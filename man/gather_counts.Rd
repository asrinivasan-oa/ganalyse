% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gather-counts.R
\name{gather_counts}
\alias{gather_counts}
\alias{gather_counts.default}
\alias{gather_counts.fpkm}
\alias{gather_counts.raw}
\title{Gather counts from \code{fpkm} or \code{raw} object}
\usage{
gather_counts(x, ...)

\method{gather_counts}{default}(x, ...)

\method{gather_counts}{fpkm}(x, by = c("gene-id", "gene-name",
  "transcript-id"), threshold = 0.1, log_base = FALSE, verbose = FALSE,
  ...)

\method{gather_counts}{raw}(x, by = c("gene-id", "gene-name"),
  threshold = 1L, log_base = FALSE, verbose = FALSE, ...)
}
\arguments{
\item{x}{An object of class \code{fpkm} or \code{raw}. See 
\code{?rnaseq}.}

\item{...}{Additional arguments to be passed to or from other methods.}

\item{by}{Level at which reads should be aggregated to (if necessary). 
There are three possible values:

\code{"gene-id"} (default): The column \code{"gene_id"} must be available 
in the raw or fpkm counts file. For fpkm, values from all transcripts 
corresponding to each gene id are summed together.

\code{"gene-name"}: The column \code{gene_short_name} must be available in 
the raw or fpkm counts file. In some cases, it might be necessary to use 
gene name instead of id. For fpkm, values from all transcripts 
corresponding to each gene name are summed together instead.

\code{"transcript-id"}: Only valid for fpkm counts. The values are retained 
as such, as they already contain the expression associated with each 
transcript. The columns \code{tracking_id} and \code{gene_id} must be 
available in the fpkm counts file.}

\item{threshold}{In case of \code{fpkm} objects, features whose row means 
>= \code{threshold} will alone be retained. In case of \code{raw} objects, 
features whose rpkm values >= \code{threshold} will alone be retained. 
Default value is \code{0.1} for \code{fpkm} and \code{1} for \code{raw} 
objects respectively. 

Note that \code{threshold} is applied on \code{fpkm} or \code{raw} counts, 
not their log transformed values.}

\item{log_base}{Value to pass to the \code{base} argument of 
\code{\link[base]{log}}. If \code{FALSE} (default), the values are not 
log transformed. \code{TRUE} defaults to base=2.

In case of \code{raw_counts}, it is recommended that the raw counts are  
\emph{not} log transformed. Some plotting functions (e.g., spectral maps) 
might be better on log transformed values. The argument is exposed for 
those cases.

In case of \code{fpkm_counts}, the recommendation is to log 
transform the values before using \code{\link{limma_dge}}.}

\item{verbose}{Logical. Default is \code{FALSE}. If \code{TRUE}, sends 
useful status messages to the console.}
}
\value{
A new object of class \code{fpkm_counts} or \code{raw_counts} 
corresponding to \code{fpkm} or \code{raw} objects respectively.
}
\description{
\code{gather_counts} takes an object of class \code{fpkm} or 
\code{raw} and returns a new object of the class \code{fpkm_counts} or 
\code{raw_counts}, which inherits from \code{fpkm/raw} respectively. An 
extra \code{counts} column is added to the input object and returned. The 
\code{counts} column is a list of \code{data.table}s.
}
\details{
\code{gather_counts} is an S3 generic with methods implemented for 
both \code{fpkm} and \code{raw} objects. 

In case of \code{fpkm} objects, the fpkm values are assumed to be 
generated by \code{cufflinks}. The argument \code{by} provides the 
the level at which differential expression has to be computed, 
since it contains fpkm counts for all expressed isoforms. See details for 
possible values for \code{by}.

In case of \code{raw}, the most common analysis is differential 
gene expression. Transcript level read counts are not possible (or makes 
very less sense) with raw counts. See \code{get_counts} function from 
\code{gcount} package for more.
}
\examples{
path = system.file("tests", package="ganalyse")

# ----- fpkm ----- # 
fpkm_path = file.path(path, "fpkm", "annotation.txt")
fpkm_obj = rnaseq(fpkm_path, format="fpkm", experiment="sample")
(fpkm_counts = gather_counts(fpkm_obj, by="gene-id", log_base=2L))
class(fpkm_counts)

# ----- raw ----- # 
raw_path = file.path(path, "raw", "annotation.txt")
raw_obj = rnaseq(raw_path, format="raw", experiment="sample")
(raw_counts = gather_counts(raw_obj, by="gene-id", threshold=1L))
class(raw_counts)
}
\seealso{
\code{\link{rnaseq}} \code{\link{limma_dge}} 
\code{\link{edger_dge}} \code{\link{as.eset}} \code{\link{show_counts}}
\code{\link{construct_design}} \code{\link{construct_contrasts}} 
\code{\link{write_dge}} \code{\link{volcano_plot}} 
\code{\link{density_plot}}
}

