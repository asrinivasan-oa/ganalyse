% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/volcano-plot.R
\name{volcano_plot}
\alias{volcano-plot}
\alias{volcano_plot}
\alias{volcano_plot.default}
\alias{volcano_plot.dge}
\title{Volcano plot for DGE analysis}
\usage{
volcano_plot(x, interactive = FALSE, title, labels = 6L, filename,
  height = 8L, width = 12L, ...)

\method{volcano_plot}{default}(x, interactive = FALSE, title, labels = 6L,
  filename, height = 8L, width = 12L, ...)

\method{volcano_plot}{dge}(x, interactive = FALSE, title, labels = 6L,
  filename, height = 8L, width = 12L, ...)
}
\arguments{
\item{x}{An object of class \code{dge} or a list of objects of class 
\code{dge}.}

\item{interactive}{Default is \code{FALSE}. If \code{TRUE}, uses 
\code{ggplotly::ggplotly()} to return an interactive plot.}

\item{title}{Plot title.}

\item{labels}{Integer vector of length-1 indicating the number of 
top genes that should be labeled. Default is 6.}

\item{filename}{Default is to plot to screen. If a file name 
is provided, the plot is saved to file and the plot object will be 
returned. The type of graphic device is auto-detected from file extension 
(using \code{ggsave}).}

\item{height}{Height of the plot, default is 8 inches.}

\item{width}{Width of the plot, default is 12 inches.}

\item{...}{Optional arguments to pass to \code{ggsave} call.}
}
\value{
A \code{ggplot2} or \code{plotly} object containing the 
volcano plot of input \code{dge} object.
}
\description{
\code{volcano_plot} takes an object of class \code{dge} and 
returns a volcano plot. If \code{filename} is provided, the plot is also 
saved to the file.
}
\details{
Both \code{\link{limma_dge}} or \code{\link{edger_dge}} 
methods return \code{dge} object which can be directly passed to 
\code{volcano_plot}. It inherits from \code{data.table}.
}
\examples{
path = system.file("tests", package="ganalyse")

# ----- raw ----- # 
raw_path = file.path(path, "raw", "annotation.txt")
raw_obj = rnaseq(raw_path, format="raw", experiment="sample")
raw_counts = gather_counts(raw_obj, by="gene-id", threshold=1L)
raw_design = construct_design(raw_counts, ~ 0 + condition)
raw_contrasts = construct_contrasts(
                     design = raw_design, 
                     treatA.vs.control = conditiontreatA-conditioncontrol, 
                     treatB.vs.control = conditiontreatB-conditioncontrol
                 )
# DE genes between treatA and control
ans = edger_dge(raw_counts, design=raw_design, 
             contrast=raw_contrasts[, "treatA.vs.control"])
volcano_plot(ans, interactive=FALSE) # ggplot2 plot
volcano_plot(ans, interactive=FALSE, title="A.vs.control")
volcano_plot(ans, interactive=TRUE, title="A.vs.control") # ggplotly plot
\dontrun{
volcano_plot(ans, filename="tmp.png") # write to file and return plot obj
}
}
\seealso{
\code{\link{rnaseq}}, \code{\link{gather_counts}} 
\code{\link{show_counts}} \code{\link{limma_dge}} \code{\link{edger_dge}}
\code{\link{construct_design}} \code{\link{construct_contrasts}} 
\code{\link{write_dge}} \code{\link{as.dgelist}} \code{\link{as.eset}}
\code{\link{density_plot}}
}

